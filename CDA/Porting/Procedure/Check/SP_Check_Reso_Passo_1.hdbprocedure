PROCEDURE "CDA_TMP"."HASSO_CREW.CDA.Porting.Procedure.Check::SP_Check_Reso_Passo_1" ( ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "CDA_TMP"
	READS SQL DATA AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 
 M_CHIAVE_CONTABILE = select * from "HT"."M_CHIAVE_CONTABILE";
 T_0FI_AR_4 = select * from "CDA_TMP"."T_0FI_AR_4"
 --where BELNR = '0099000063' 
 ;
 
--Seleziono i pagamenti relativi a fatture secche
 TMP_GMP_CLI_RESI_PASSO1 =
 
 	select a.BUKRS, a.GJAHR, a.BELNR, a.BUZEI, 
	 	ROW_NUMBER() OVER ( PARTITION BY a.BUKRS, a.GJAHR, a.BELNR, a.BUZEI order by b.BLDAT) as "ROWID", 
		a.KUNNR, a.BLDAT, a.NETDT,
		a.DMSHB, a.WRSHB,					--totale del pagamento
		b.DMSHB VAL_PAGATO_ALLOCATO_GMP, 	--pagamenti allocati
		b.WRSHB VAL_PAGATO_ALLOCATO_GMP_LC, 
		b.BLDAT DATA_PAGAMENTO,
		b.REBZJ ESERCIZIO_PAGAMENTO,  		--anno fiscale di pagamento 
		b.REBZG DOCUMENTO_PAGAMENTO, 		--documento di pagamento
		b.REBZZ NUM_RIGA_PAGAMENTO			--posizione del documento
	from :T_0FI_AR_4 a
	inner join 
	(
		select  BUKRS, REBZG, REBZJ, REBZZ, DMSHB, WRSHB, BLDAT
		from :T_0FI_AR_4 a
		inner join :M_CHIAVE_CONTABILE b
		on (a.BSCHL=b.BSCHL)
		where b.DESTINAZIONE='Cliente'
		and b.TIPO_CHIAVE='Fatture'
		and b.TIPO = 'avere'
		--Condizione da imputare
		and REBZJ<>0
	) b
	on (a.BUKRS=b.BUKRS and a.GJAHR=b.REBZJ and a.BELNR=b.REBZG and a.BUZEI=b.REBZZ)
	;
	
	--Passo1 Bis:
	--creo la colonna Pagato Allocato
	TMP_GMP_CLI_RESI_PASSO2 =
		select 
		a.BUKRS, a.GJAHR, a.BELNR, a.BUZEI, "ROWID", 
		a.KUNNR, a.BLDAT, a.NETDT,
		a.DMSHB, a.WRSHB,
		case when "ROWID"=1 then b.VAL_PAGATO_ALLOCATO else null end VAL_PAGATO_ALLOCATO,
		VAL_PAGATO_ALLOCATO_GMP, 
		case when "ROWID"=1 then b.VAL_PAGATO_ALLOCATO_LC else null end VAL_PAGATO_ALLOCATO_LC,
		VAL_PAGATO_ALLOCATO_GMP_LC, DATA_PAGAMENTO,
		ESERCIZIO_PAGAMENTO, 
		DOCUMENTO_PAGAMENTO, 
		NUM_RIGA_PAGAMENTO
		--into #TMP_GMP_CLI_PASSO2
		from :TMP_GMP_CLI_RESI_PASSO1 a
		inner join
		(
			select a.BUKRS, a.GJAHR, a.BELNR, a.BUZEI, sum(VAL_PAGATO_ALLOCATO_GMP) VAL_PAGATO_ALLOCATO, sum(VAL_PAGATO_ALLOCATO_GMP_LC) VAL_PAGATO_ALLOCATO_LC
			From :TMP_GMP_CLI_RESI_PASSO1 a
			group by  a.BUKRS, a.GJAHR, a.BELNR, a.BUZEI
		) b
		on (a.BUKRS=b.BUKRS and a.GJAHR=b.GJAHR and a.BELNR=b.BELNR and a.BUZEI=b.BUZEI)
	;
 
	--Creo la WT dedicata al passo1:
	return_tmp =
		select 
		a.BUKRS, a.GJAHR, a.BELNR, a.BUZEI, a.BSCHL, a.AUGBL, a.AUGDT, a.KUNNR, a.BLDAT, a.NETDT,
		case
			when REBZJ<>0 AND c.DESTINAZIONE='Cliente' and c.TIPO_CHIAVE='Fatture' and c.TIPO = 'avere' then 1 --Resi associati a Fatture dirette
			when a.DMSHB=VAL_PAGATO_ALLOCATO_GMP then 1 --Fatture totalmente elise dai pagamenti diretti
			when "ROWID">1 then 1 --Righe fatture fittizie generate con il passo1
			else 0
		end STATUS, 
		a.DMSHB, a.WRSHB, b."ROWID", 
		case
			when REBZJ<>0 AND c.DESTINAZIONE='Cliente' and c.TIPO_CHIAVE='Fatture' and c.TIPO = 'avere' then -1*a.DMSHB
			else b.VAL_PAGATO_ALLOCATO
		end VAL_PAGATO_ALLOCATO, 
		b.VAL_PAGATO_ALLOCATO_GMP, 
		case
			when REBZJ<>0 AND c.DESTINAZIONE='Cliente' and c.TIPO_CHIAVE='Fatture' and c.TIPO = 'avere' then -1*a.WRSHB
			else b.VAL_PAGATO_ALLOCATO_LC
		end VAL_PAGATO_ALLOCATO_LC,
		b.VAL_PAGATO_ALLOCATO_GMP_LC, 
		b.DATA_PAGAMENTO,
		b.ESERCIZIO_PAGAMENTO, 
		b.DOCUMENTO_PAGAMENTO, 
		b.NUM_RIGA_PAGAMENTO
		--into [dbo].[WT_CLI_PASSO1]
		from :T_0FI_AR_4 a
		left join :TMP_GMP_CLI_RESI_PASSO2 b
		on (a.BUKRS=b.BUKRS and a.GJAHR=b.GJAHR and a.BELNR=b.BELNR and a.BUZEI=b.BUZEI)
		inner join :M_CHIAVE_CONTABILE c
		on (a.BSCHL=c.BSCHL)

 		--where a.BELNR = '0099000063' 
 ;
 
	
 
END;
