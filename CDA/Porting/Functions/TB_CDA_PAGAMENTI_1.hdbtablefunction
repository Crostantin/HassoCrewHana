FUNCTION "HT"."HASSO_CREW.CDA.Porting.Functions::TB_CDA_PAGAMENTI_1" ( ) 
	RETURNS TABLE(
		--return_table_type
	BUKRS NVARCHAR(4),
	GJAHR DECIMAL(4,0),
	BELNR NVARCHAR(10),
	BUZEI DECIMAL(3,0),
	BSCHL NVARCHAR(2),
	AUGBL NVARCHAR(10),
	AUGDT DATE,
	KUNNR NVARCHAR(10),
	BLDAT DATE,
	NETDT DATE,
	STATUS INTEGER,
	DMSHB DECIMAL(13,2),
	WRSHB DECIMAL(13,2),
	"ROWID" BIGINT,
	VAL_PAGATO_ALLOCATO DECIMAL(38,2),
	VAL_PAGATO_ALLOCATO_GMP DECIMAL(13,2),
	VAL_PAGATO_ALLOCATO_LC DECIMAL(38,2),
	VAL_PAGATO_ALLOCATO_GMP_LC DECIMAL(13,2),
	DATA_PAGAMENTO DATE,
	ESERCIZIO_PAGAMENTO DECIMAL(4,0),
	DOCUMENTO_PAGAMENTO NVARCHAR(10),
	NUM_RIGA_PAGAMENTO DECIMAL(3,0)
	) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER AS
BEGIN
	
/***************************** 
	Write your function logic
 *****************************/

 M_CHIAVE_CONTABILE = select * from "HT"."M_CHIAVE_CONTABILE";
 T_0FI_AR_4 = select * from "CDA_TMP"."T_0FI_AR_4";
 
--Seleziono i pagamenti relativi a fatture secche
 TMP_GMP_CLI_PASSO1 =
 
 	select a.BUKRS, a.GJAHR, a.BELNR, a.BUZEI, ROW_NUMBER() OVER ( PARTITION BY a.BUKRS, a.GJAHR, a.BELNR, a.BUZEI order by b.BLDAT) as "ROWID", 
	a.KUNNR, a.BLDAT, a.NETDT,
	a.DMSHB, a.WRSHB,
	b.DMSHB VAL_PAGATO_ALLOCATO_GMP, b.WRSHB VAL_PAGATO_ALLOCATO_GMP_LC, b.BLDAT DATA_PAGAMENTO,
	b.REBZJ ESERCIZIO_PAGAMENTO, 
	b.REBZG DOCUMENTO_PAGAMENTO, 
	b.REBZZ NUM_RIGA_PAGAMENTO
	from :T_0FI_AR_4 a
	inner join 
	(
		select  BUKRS, REBZG, REBZJ, REBZZ, DMSHB, WRSHB, BLDAT
		FROM :T_0FI_AR_4 a
		inner join :M_CHIAVE_CONTABILE b
		on (a.BSCHL=b.BSCHL)
		where b.DESTINAZIONE='Cliente'
		and b.TIPO_CHIAVE='Pagamenti'
		--Condizione da imputare
		and REBZJ<>0
	) b
	on (a.BUKRS=b.BUKRS and a.GJAHR=b.REBZJ and a.BELNR=b.REBZG and a.BUZEI=b.REBZZ);

--creo la colonna Pagato Allocato
 TMP_GMP_CLI_PASSO2 =
 
 	select 
	a.BUKRS, a.GJAHR, a.BELNR, a.BUZEI, A."ROWID", 
	a.KUNNR, a.BLDAT, a.NETDT,
	a.DMSHB, a.WRSHB,
	case when A."ROWID"=1 then b.VAL_PAGATO_ALLOCATO else null end as "VAL_PAGATO_ALLOCATO",
	VAL_PAGATO_ALLOCATO_GMP, 
	case when A."ROWID"=1 then b.VAL_PAGATO_ALLOCATO_LC else null end as "VAL_PAGATO_ALLOCATO_LC",
	VAL_PAGATO_ALLOCATO_GMP_LC, DATA_PAGAMENTO,
	ESERCIZIO_PAGAMENTO, 
	DOCUMENTO_PAGAMENTO, 
	NUM_RIGA_PAGAMENTO

	from :TMP_GMP_CLI_PASSO1 a
	inner join
	(
		select a.BUKRS, a.GJAHR, a.BELNR, a.BUZEI, sum(VAL_PAGATO_ALLOCATO_GMP) VAL_PAGATO_ALLOCATO, sum(VAL_PAGATO_ALLOCATO_GMP_LC) VAL_PAGATO_ALLOCATO_LC
		From :TMP_GMP_CLI_PASSO1 a
		group by  a.BUKRS, a.GJAHR, a.BELNR, a.BUZEI
	) b
	on (a.BUKRS=b.BUKRS and a.GJAHR=b.GJAHR and a.BELNR=b.BELNR and a.BUZEI=b.BUZEI)
	;
	
	
return 
	(select 
 		a.BUKRS, a.GJAHR, a.BELNR, a.BUZEI, a.BSCHL, a.AUGBL, a.AUGDT, a.KUNNR, a.BLDAT, a.NETDT,
	case
		when REBZJ<>0 then 1  						--Pagamenti associati a Fatture dirette
		when a.DMSHB=VAL_PAGATO_ALLOCATO_GMP then 1 --Fatture totalmente elise dai pagamenti diretti
		when b."ROWID">1 then 1 					--Righe fatture fittizie generate con il passo1
		else 0
	end status,
	a.DMSHB, a.WRSHB, b."ROWID", 
	case
		when REBZJ<>0 AND c.TIPO_CHIAVE='Pagamenti' then -1*a.DMSHB
		else b.VAL_PAGATO_ALLOCATO
	end VAL_PAGATO_ALLOCATO, 
	b.VAL_PAGATO_ALLOCATO_GMP, 
	case 
		when REBZJ<>0 AND c.TIPO_CHIAVE='Pagamenti' 
			then -1*a.WRSHB
		else b.VAL_PAGATO_ALLOCATO_LC
	end as "VAL_PAGATO_ALLOCATO_LC",
	b.VAL_PAGATO_ALLOCATO_GMP_LC, 
	b.DATA_PAGAMENTO,
	b.ESERCIZIO_PAGAMENTO, 
	b.DOCUMENTO_PAGAMENTO, 
	b.NUM_RIGA_PAGAMENTO
	from :T_0FI_AR_4 a
	left join 
		:TMP_GMP_CLI_PASSO2 b
		on (a.BUKRS=b.BUKRS and a.GJAHR=b.GJAHR and a.BELNR=b.BELNR and a.BUZEI=b.BUZEI)
		inner join :M_CHIAVE_CONTABILE c
	on (a.BSCHL=c.BSCHL))
	;

END;